# OpenMetadata Helm Values - Based on Official Documentation
# Reference: https://docs.open-metadata.org/latest/deployment/kubernetes/helm-values

# OpenMetadata Configuration
openmetadata:
  config:
    # Cluster Configuration
    clusterName: "openmetadata"
    logLevel: "INFO"

    # Database Configuration
    database:
      enabled: true
      host: "mysql"
      port: 3306
      databaseName: "openmetadata_db"
      dbScheme: "mysql"
      dbParams: "allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC"
      driverClass: "com.mysql.cj.jdbc.Driver"
      auth:
        username: "bigadm"
        password:
          secretRef: "bigadm"
          secretKey: "password"

    # Elasticsearch/OpenSearch Configuration
    elasticsearch:
      enabled: true
      host: "opensearch"
      port: 9200
      scheme: "http"
      searchType: "opensearch"
      keepAliveTimeoutSecs: 600
      searchIndexMappingLanguage: "EN"
      auth:
        enabled: true
        username: "bigadm"
        password:
          secretRef: "bigadm"
          secretKey: "password"

    # Authentication Configuration
    authentication:
      enabled: true
      provider: "basic"
      publicKeys:
        - "http://openmetadata:8585/api/v1/system/config/jwks"
      authority: "https://accounts.google.com"
      clientType: "public"
      enableSelfSignup: true
      jwtPrincipalClaims:
        - "email"
        - "preferred_username"
        - "sub"

    # Authorization Configuration
    authorizer:
      enabled: true
      className: "org.openmetadata.service.security.DefaultAuthorizer"
      containerRequestFilter: "org.openmetadata.service.security.JwtFilter"
      initialAdmins:
        - "admin"
      allowedEmailRegistrationDomains:
        - "all"
      enforcePrincipalDomain: false
      principalDomain: "open-metadata.org"

    # JWT Token Configuration
    jwtTokenConfiguration:
      enabled: true
      keyId: "Gb389a-9f76-gdjs-a92j-0242bk94356"
      jwtissuer: "open-metadata.org"
      rsapublicKeyFilePath: "./conf/public_key.der"
      rsaprivateKeyFilePath: "./conf/private_key.der"

    # Server Configuration
    openmetadata:
      host: "openmetadata"
      port: 8585
      adminPort: 8586

    # Airflow Configuration
    airflow:
      enabled: true
      host: "http://openmetadata-dependencies-web:8080"
      auth:
        username: "admin"
        password:
          secretRef: "airflow-secrets"
          secretKey: "openmetadata-airflow-password"
      openmetadata:
        serverHostApiUrl: "http://openmetadata:8585/api"
      verifySsl: "no-ssl"
      sslCertificatePath: "/no/path"

    # Pipeline Service Client Configuration
    pipelineServiceClientConfig:
      enabled: true
      className: "org.openmetadata.service.clients.pipeline.airflow.AirflowRESTClient"
      apiEndpoint: "http://openmetadata-dependencies-web:8080"
      metadataApiEndpoint: "http://openmetadata:8585/api"
      healthCheckInterval: 300
      ingestionIpInfoEnabled: false
      verifySsl: "no-ssl"
      sslCertificatePath: "/no/path"
      auth:
        username: "admin"
        password:
          secretRef: "airflow-secrets"
          secretKey: "openmetadata-airflow-password"

    # Fernet Key Configuration
    fernetkey:
      value: "jJ/9sz0g0OHxsfxOoSfdFdmk3ysNmPRnH3TUAbz3IHA="

    # Event Monitor Configuration
    eventMonitor:
      enabled: true
      type: "prometheus"
      batchSize: 10
      pathPattern:
        - "/api/v1/tables/*"
        - "/api/v1/health-check"
      latency: []

    # Secrets Manager Configuration
    secretsManager:
      enabled: false
      provider: ""
      prefix: ""
      tags: []

    # SMTP Configuration
    smtpConfig:
      enableSmtpServer: false
      emailingEntity: "OpenMetadata"
      supportUrl: "https://slack.open-metadata.org"
      transportationStrategy: "SMTP_TLS"

    # Web Configuration
    web:
      enabled: true
      uriPath: "/api"
      contentTypeOptions:
        enabled: false
      frameOptions:
        enabled: false
        option: "SAMEORIGIN"
      hsts:
        enabled: false
        maxAge: "365 days"
        includeSubDomains: true
        preload: true
      xssProtection:
        enabled: false
        onXss: true
        block: true
      referrer-policy:
        enabled: false
        option: "SAME_ORIGIN"
      permission-policy:
        enabled: false

# Global Configuration
global:
  # MySQL Global Configuration
  mysql:
    auth:
      rootPassword: "bigadm_password"
      username: "bigadm"
      password: "bigadm_password"
      database: "openmetadata_db"

  # Elasticsearch Global Configuration
  elasticsearch:
    host: "opensearch"
    port: 9200

# Dependencies Configuration
mysql:
  enabled: true
  auth:
    rootPassword: "bigadm_password"
    username: "bigadm"
    password: "bigadm_password"
    database: "openmetadata_db"
  primary:
    persistence:
      enabled: true
      storageClass: "local-path"
      accessModes:
        - ReadWriteOnce
      size: 10Gi
    configuration: |
      [mysqld]
      default-authentication-plugin=mysql_native_password
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mysql
      plugin_dir=/opt/bitnami/mysql/lib/plugin
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      datadir=/bitnami/mysql/data
      tmpdir=/opt/bitnami/mysql/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
      log-error=/opt/bitnami/mysql/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      slow_query_log=0
      slow_query_log_file=/opt/bitnami/mysql/logs/mysqld.log
      long_query_time=10.0

# OpenSearch Configuration (replacing Elasticsearch)
opensearch:
  enabled: true
  clusterName: "opensearch-cluster"
  nodeGroup: "master"
  masterService: "opensearch"
  roles:
    master: "true"
    ingest: "true"
    data: "true"
    remote_cluster_client: "true"
  replicas: 1
  minimumMasterNodes: 1
  persistence:
    enabled: true
    storageClass: "local-path"
    accessModes:
      - ReadWriteOnce
    size: 30Gi
  config:
    opensearch.yml: |
      cluster.name: opensearch-cluster
      network.host: 0.0.0.0
      plugins.security.disabled: false
      plugins.security.ssl.transport.enforce_hostname_verification: false
      plugins.security.ssl.http.enabled: false
      plugins.security.allow_default_init_securityindex: true
      plugins.security.authcz.admin_dn:
        - "CN=bigadm,OU=client,O=client,L=Test,C=DE"
      discovery.type: single-node
  extraEnvs:
    - name: OPENSEARCH_JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          name: bigadm
          key: password

# Airflow Configuration
airflow:
  enabled: true
  airflow:
    auth:
      username: "admin"
      password: "admin"
    extraEnv:
      - name: AIRFLOW__WEBSERVER__EXPOSE_CONFIG
        value: "True"
      - name: AIRFLOW__WEBSERVER__BASE_URL
        value: "http://localhost:8080"
    config:
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "True"
      AIRFLOW__CORE__DAG_DISCOVERY_SAFE_MODE: "False"
      AIRFLOW__CORE__DEFAULT_TIMEZONE: "UTC"
  postgresql:
    enabled: true
    auth:
      postgresPassword: "airflow"
      username: "airflow"
      password: "airflow"
      database: "airflow"
    primary:
      persistence:
        enabled: true
        storageClass: "local-path"
        size: 8Gi
  redis:
    enabled: true
    auth:
      enabled: false
    master:
      persistence:
        enabled: true
        storageClass: "local-path"
        size: 2Gi

# Service Configuration (nginx-ingress optimized)
service:
  type: ClusterIP  # nginx-ingress 사용 시 ClusterIP 권장
  port: 8585
  adminPort: 8586
  annotations:
    # nginx-ingress 최적화를 위한 service annotations
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"

# Ingress Configuration for nginx-ingress
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Accept-Encoding "";
      sub_filter '<head>' '<head> <base href="/openmetadata/">';
      sub_filter_once on;
    # SSL 설정 (HTTPS 사용 시)
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: openmetadata.yourdomain.com  # 실제 도메인으로 변경
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: openmetadata
              port:
                number: 8585
  # TLS 설정 (HTTPS 사용 시 주석 해제)
  # tls:
  #   - secretName: openmetadata-tls
  #     hosts:
  #       - openmetadata.yourdomain.com

# Resource Configuration
resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 2Gi

# Auto Scaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80

# Node Selection
nodeSelector: {}

# Tolerations
tolerations: []

# Pod Affinity
affinity: {}

# Security Context
podSecurityContext:
  fsGroup: 1000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

# Extra Volumes for logs and custom configurations
extraVolumes:
  - name: openmetadata-logs
    persistentVolumeClaim:
      claimName: openmetadata-logs-pvc

extraVolumeMounts:
  - name: openmetadata-logs
    mountPath: /opt/openmetadata/logs

# Custom PVC for logs
extraPersistentVolumeClaims:
  - name: openmetadata-logs-pvc
    spec:
      storageClassName: "local-path"
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi

# Upgrade Migration Configuration
upgradeMigrationConfigs:
  debug: false